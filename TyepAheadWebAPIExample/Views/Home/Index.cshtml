<div class="container">
    <h3>Demo</h3>
    <div class="panel panel-default">
        <div class="panel-heading">Welcome</div>
        <div class="panel-body">
            This page is to demonstrate the use of Twitter's Typeahead.js library within an ASP.Net Web API project. This search box is used to search titles & authors. The available titles and authors to search for are:
            <br />
            <br />
            <ul>
                <li>David Baldacci - The Winner</li>
                <li>Bret Easton Ellis - American Psycho</li>
                <li>Bret Easton Ellis - Less Than Zero</li>
                <li>James Patterson - Private Vegas</li>
            </ul>
            <br />
            <div class="well">
                <div class="form-inline">
                    <div class="form-group">
                        <label for="searchBox">Enter a search term:</label>
                    </div>
                    <div class="form-group">
                        <input type="text" placeholder="Search..." id="searchBox" class="form-control" />
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script type="text/javascript" src="~/scripts/typeahead.bundle.js"></script>
    <script type="text/javascript" src="~/scripts/handlebars.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            var searchBoxBloodHound = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(datum.Title);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: '/api/values/GetAllBooks',
                    filter: function (books) {
                        return $.map(books, function (data) {
                            return {
                                title: data.Title,
                                author: data.Author
                            }
                        });
                    }
                },
                remote: {
                    url: '/api/values/SearchBooks?searchTerm=%QUERY',
                    // the returned json contains an array of strings, but the Bloodhound
                    // suggestion engine expects JavaScript objects so this converts all of
                    // those strings into objects containing the properties, title and author
                    filter: function (books) {
                        return $.map(books, function (data) {
                            return {
                                title: data.Title,
                                author: data.Author
                            }
                        });
                    },

                },

            });

            searchBoxBloodHound.initialize();

            $('#searchBox').typeahead(null, {
                displayKey: 'title',
                source: searchBoxBloodHound.ttAdapter(),
                templates: {
                    suggestion: Handlebars.compile('<p><strong>{{author}}</strong> – {{title}}</p>')
                }
            });

        });
    </script>
}